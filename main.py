import telebot
from telebot import types
import sqlite3

TOKEN = "7869769364:AAGWDK4orRgxQDcjfEHScbfExgIt_Ti8ARs"
ADMIN_ID = 6964741705
WALLET_ID = "1125130202"

bot = telebot.TeleBot(TOKEN)

# ุฅูุดุงุก ูุงุนุฏุฉ ุงูุจูุงูุงุช
conn = sqlite3.connect('users.db', check_same_thread=False)
cursor = conn.cursor()
cursor.execute("CREATE TABLE IF NOT EXISTS users (id INTEGER PRIMARY KEY, username TEXT, balance INTEGER DEFAULT 0, referred_by INTEGER)")
conn.commit()

# ๐ ุจุฏุก ุงูุจูุช
@bot.message_handler(commands=['start'])
def start(msg):
    user_id = msg.from_user.id
    username = msg.from_user.username or "ุจุฏูู ุงุณู"
    args = msg.text.split()

    # ุชุญูู ุฅุฐุง ูุงู ูุณุชุฎุฏู ุฌุฏูุฏ
    cursor.execute("SELECT * FROM users WHERE id=?", (user_id,))
    if not cursor.fetchone():
        referred_by = int(args[1]) if len(args) > 1 and args[1].isdigit() else None
        cursor.execute("INSERT INTO users (id, username, referred_by) VALUES (?, ?, ?)", (user_id, username, referred_by))

        if referred_by:
            cursor.execute("UPDATE users SET balance = balance + 1 WHERE id=?", (referred_by,))
            bot.send_message(referred_by, f"๐ ุชูุช ุฅุถุงูุฉ 1ยข ุฅูู ุฑุตูุฏู ูุฅุญุงูุชู ุตุฏูู ุฌุฏูุฏ!")

        conn.commit()

    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton("๐ค ุดุงุฑู ุฑุงุจุท ุงูุฏุนูุฉ", callback_data="share"))
    markup.add(types.InlineKeyboardButton("๐ฐ ุดุฑุงุก ุงูุงุณุชุฑุงุชูุฌูุงุช", callback_data="buy"))
    markup.add(types.InlineKeyboardButton("๐ณ ุงููุญูุธุฉ", callback_data="wallet"))
    bot.send_message(user_id, "๐ ูุฑุญุจูุง ุจู ูู ุจูุช ุงูุชุฏุงูู ุงูุงุญุชุฑุงูู.\nุงุฎุชุฑ ุฃุญุฏ ุงูุฎูุงุฑุงุช ๐", reply_markup=markup)

# ๐ฏ ูุดุงุฑูุฉ ุฑุงุจุท ุงูุฏุนูุฉ
@bot.callback_query_handler(func=lambda call: call.data == "share")
def share(call):
    user_id = call.from_user.id
    ref_link = f"https://t.me/pocketoptiondars_bot?start={user_id}"
    bot.send_message(user_id, f"๐ ุฑุงุจุท ุงูุฏุนูุฉ ุงูุฎุงุต ุจู:\n{ref_link}\n\n๐ฅ ูู ูู ููุถู ุนุจุฑู ุชุญุตู ุนูู 1ยข ุฑูุจู!")

# ๐ฐ ุดุฑุงุก ุงูุงุณุชุฑุงุชูุฌูุงุช
@bot.callback_query_handler(func=lambda call: call.data == "buy")
def buy_strategy(call):
    user_id = call.from_user.id
    cursor.execute("SELECT balance FROM users WHERE id=?", (user_id,))
    result = cursor.fetchone()
    if result and result[0] >= 5:
        cursor.execute("UPDATE users SET balance = balance - 5 WHERE id=?", (user_id,))
        conn.commit()
        bot.send_message(user_id, "๐ ุชู ุฅุฑุณุงู ุงูุงุณุชุฑุงุชูุฌูุงุช ุจูุฌุงุญ! โ\n\n๐ ุฅููู ุงูุฏุฑูุณ:")
        send_lessons(user_id)
    else:
        bot.send_message(user_id, "โ ุชุญุชุงุฌ ุฅูู 5ยข ุนูู ุงูุฃูู ูุดุฑุงุก ุงูุงุณุชุฑุงุชูุฌูุงุช.\n๐ค ูู ุจุฏุนูุฉ ุฃุตุฏูุงุฆู ูุฒูุงุฏุฉ ุงูุฑุตูุฏ.")

# ๐ณ ุนุฑุถ ุงููุญูุธุฉ
@bot.callback_query_handler(func=lambda call: call.data == "wallet")
def wallet(call):
    bot.send_message(call.from_user.id, f"๐ผ ุนููุงู ูุญูุธุฉ ุงูุฏูุน:\n`{WALLET_ID}`\n\n๐ ุงุถุบุท ูุทูููุง ููุณุฎ ุงูุนููุงู.", parse_mode="Markdown")

# ๐ ุฅุฑุณุงู ุงูุฏุฑูุณ ุงูุชุนููููุฉ (ุนูุฏ ุงูุดุฑุงุก)
def send_lessons(user_id):
    lessons = [
        "๐ข ุงูุฏุฑุณ 1: ูุง ูู ุงูุชุฏุงูู ูู Pocket Optionุ\n\n๐ ุดุฑุญ ูุงูู: ุงูุชุฏุงูู ูู ุงูููุตุฉ ูุนุชูุฏ ุนูู ุงูุชููุน ุฅุฐุง ูุงู ุงูุณุนุฑ ุณูุฑุชูุน ุฃู ููุฎูุถ ุฎูุงู ูุชุฑุฉ ุฒูููุฉ ูุตูุฑุฉ.",
        "๐ข ุงูุฏุฑุณ 2: ุงููุฑู ุจูู ุงูุดุฑุงุก ูุงูุจูุน\n\n๐ผ ุดุฑุงุก = ุชุชููุน ุตุนูุฏ ุงูุณุนุฑ\n๐ฝ ุจูุน = ุชุชููุน ูุจูุท ุงูุณุนุฑ",
        "๐ข ุงูุฏุฑุณ 3: ุฅุฏุงุฑุฉ ุฑุฃุณ ุงููุงู\n\n๐ก ูุง ุชุฎุงุทุฑ ุจุฃูุซุฑ ูู 5% ูู ุฑุตูุฏู ูู ุฃู ุตููุฉ.",
        # ุฃุถู ุจุงูู ุงูุฏุฑูุณ ุญุณุจ ุงูุญุงุฌุฉ...
    ]
    for lesson in lessons:
        bot.send_message(user_id, lesson)

# ๐ก ุดุฑุญ ุฃู ุฒุฑ ูุชู ุถุบุทู
@bot.callback_query_handler(func=lambda call: True)
def explain_buttons(call):
    explanations = {
        "share": "๐ค ุดุงุฑู ูุฐุง ุงูุฑุงุจุท ูุน ุฃุตุฏูุงุฆู ูุชุญุตู ุนูู 1ยข ุนู ูู ุฅุญุงูุฉ ูุงุฌุญุฉ.",
        "buy": "๐ฐ ูู ุจุดุฑุงุก ุงุณุชุฑุงุชูุฌูุงุช ุชุฏุงูู ูุชูุฏูุฉ ุจุนุฏ ุฌูุน 5ยข.",
        "wallet": "๐ณ ูุฐุง ูู ุนููุงู ูุญูุธุชู ูุชุญููู ุฑุณูู ุงูุงุดุชุฑุงู ุฃู ุงูุฏูุน."
    }
    if call.data in explanations:
        bot.send_message(call.from_user.id, f"โน๏ธ ุชูุถูุญ:\n{explanations[call.data]}")

# โ ุชุดุบูู ุงูุจูุช
print("โ Bot is running...")
bot.infinity_polling()
